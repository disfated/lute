{
  "name": "jzohrab/lute",
  "description": "Lute (Learn Using Texts).  A rewrite of LWT (Learning With Texts).",
  "type": "library",
  "keywords": ["language-learning","reading","lwt","Learning-with-Texts", "Lute"],
  "homepage": "https://jzohrab.github.io/lute",
  "license": "UNLICENSE",
  "minimum-stability": "stable",
  "support": {
    "issues": "https://github.com/jzohrab/lute/issues",
    "source": "https://github.com/jzohrab/lute"
  },
  "require": {
    "php": ">=8.1",
    "ext-ctype": "*",
    "ext-iconv": "*",
    "ext-mbstring": "*",
    "doctrine/annotations": "^1.0",
    "doctrine/doctrine-bundle": "^2.7",
    "doctrine/doctrine-migrations-bundle": "^3.2",
    "doctrine/orm": "^2.13",
    "phpdocumentor/reflection-docblock": "^5.3",
    "phpstan/phpdoc-parser": "^1.14",
    "sensio/framework-extra-bundle": "^6.2",
    "symfony/apache-pack": "^1.0",
    "symfony/asset": "6.2.*",
    "symfony/console": "6.2.*",
    "symfony/doctrine-messenger": "6.2.*",
    "symfony/dotenv": "6.2.*",
    "symfony/expression-language": "6.2.*",
    "symfony/flex": "^2",
    "symfony/form": "6.2.*",
    "symfony/framework-bundle": "6.2.*",
    "symfony/http-client": "6.2.*",
    "symfony/mailer": "6.2.*",
    "symfony/mime": "6.2.*",
    "symfony/monolog-bundle": "^3.0",
    "symfony/notifier": "6.2.*",
    "symfony/process": "6.2.*",
    "symfony/property-access": "6.2.*",
    "symfony/property-info": "6.2.*",
    "symfony/proxy-manager-bridge": "6.2.*",
    "symfony/runtime": "6.2.*",
    "symfony/security-bundle": "6.2.*",
    "symfony/serializer": "6.2.*",
    "symfony/string": "6.2.*",
    "symfony/translation": "6.2.*",
    "symfony/twig-bundle": "6.2.*",
    "symfony/validator": "6.2.*",
    "symfony/web-link": "6.2.*",
    "symfony/yaml": "6.2.*",
    "twig/extra-bundle": "^2.12|^3.0",
    "twig/twig": "^2.12|^3.0"
  },
  "config": {
    "allow-plugins": {
      "symfony/flex": true,
      "symfony/runtime": true
    },
    "sort-packages": true
  },
  "require-dev": {
    "dbrekelmans/bdi": "^1.0",
    "league/commonmark": "^2.2",
    "matthiasmullie/minify": "^1.3",
    "phpunit/phpunit": "^9.5",
    "symfony/browser-kit": "6.2.*",
    "symfony/css-selector": "6.2.*",
    "symfony/debug-bundle": "6.2.*",
    "symfony/maker-bundle": "^1.0",
    "symfony/panther": "^2.0",
    "symfony/phpunit-bridge": "^6.2",
    "symfony/stopwatch": "6.2.*",
    "symfony/web-profiler-bundle": "6.2.*",
    "vimeo/psalm": "^4.12"
  },
  "autoload": {
    "psr-4": {
      "App\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "App\\Tests\\": "tests/"
    }
  },
  "replace": {
    "symfony/polyfill-ctype": "*",
    "symfony/polyfill-iconv": "*",
    "symfony/polyfill-php72": "*",
    "symfony/polyfill-php73": "*",
    "symfony/polyfill-php74": "*",
    "symfony/polyfill-php80": "*",
    "symfony/polyfill-php81": "*"
  },
  "suggest": {
    "squizlabs/php_codesniffer": "Following code style standards is a good thing"
  },
  "scripts": {
    "app:release:check": [
      "./utils/release/create_build_env.sh",
      "./utils/release/bust_javascript_cache.sh",
      "./utils/release/create_zip.sh",
      "./utils/release/deploy_zip.sh",
      "./utils/release/open_release.sh"
    ],
    "app:release:final": "./utils/release/create_zip.sh",
    "app:changelog": "./utils/dump_changelog.sh",
    "dev:class": "./utils/entityInterface.sh",
    "todo:list": "composer dev:find TODO | grep -v docs/",
    "todo:types": "composer dev:find TODO | grep TODO | sed -E 's/.*(TODO[^ ]*).*/\\1/' | sort | uniq",
    "db:create:prod": "APP_ENV=prod php db/create.php",
    "db:create:test": "APP_ENV=test php db/create.php",
    "db:create:demo": [
      "composer test:group dev:data:load",
      "cp data/test_lute.db db/baseline/demo.sqlite"
    ],
    "db:migrate:prod": "APP_ENV=prod php db/migrate.php",
    "db:migrate:test": "APP_ENV=test php db/migrate.php",
    "db:newscript": "php db/create_migration_script.php",
    "db:newrepeat": "php db/create_repeatable_migration_script.php",
    "db:suggestions": "bin/console doctrine:schema:update --dump-sql",
    "dev:dumpserver": "php bin/console server:dump",
    "test": [
      "composer db:create:test",
      "SYMFONY_DEPRECATIONS_HELPER=disabled ./bin/phpunit -v -c phpunit.xml.dist"
    ],
    "test:src": [
      "composer test tests/src"
    ],
    "test:accept": [
      "NO_BING_IMAGES=true composer test tests/acceptance/"
    ],
    "test:accept:visible": [
      "PANTHER_NO_HEADLESS=true PANTHER_DEVTOOLS=0 NO_BING_IMAGES=true composer test:accept"
    ],
    "test:nofail": [
      "composer db:create:test",
      "NO_BING_IMAGES=true SYMFONY_DEPRECATIONS_HELPER=disabled ./bin/phpunit -v -c phpunit.xml.dist --stop-on-error --stop-on-failure"
    ],
    "test:group": [
      "composer db:create:test",
      "NO_BING_IMAGES=true PANTHER_NO_HEADLESS=true PANTHER_DEVTOOLS=0 SYMFONY_DEPRECATIONS_HELPER=disabled ./bin/phpunit -v -c phpunit.xml.dist --group "
    ],
    "test:validateschema": [
      "bin/console doctrine:schema:validate --skip-sync"
    ],
    "test:full": [
      "composer dev:psalm",
      "composer dev:finddump",
      "composer db:create:test",
      "bin/console doctrine:schema:validate --skip-sync  # <-- hash suppresses any arguments",
      "composer test:src",
      "composer test:accept"
    ],
    "dev:find": "./utils/findstring.sh",
    "dev:finddump": "./utils/finddump.sh",
    "dev:data:load": "composer test:group dev:data:load",
    "dev:data:clear": "composer test:group dev:data:clear",
    "dev:start": "open http://localhost:9999 && cd public && php -S 0.0.0.0:9999 &",
    "dev:stop": [
      "echo Killing processes:",
      "ps -a | grep 9999 | grep php | grep -v ps",
      "for p in `ps -a | grep 9999 | grep php | grep -v ps | awk '{print $1}'`; do echo \"killing $p\"; kill $p; done"
    ],
    "dev:nukecache": [
      "rm -rf var/cache",
      "php bin/console cache:clear",
      "composer clearcache",
      "php bin/console cache:warmup"
    ],
    "dev:psalm": "./vendor/bin/psalm",
    "auto-scripts": {
      "cache:clear": "symfony-cmd",
      "assets:install %PUBLIC_DIR%": "symfony-cmd"
    },
    "post-install-cmd": [
      "@auto-scripts"
    ],
    "post-update-cmd": [
      "@auto-scripts"
    ]
    
  },
  "scripts-descriptions": {
    "app:changelog": "Dump commits into changelog for refining.",
    "app:release:check": "Make temp package ../lute_release.zip, and open to verify.  Use MODE=offline to test using prod vendor",
    "app:release:final": "Make final package ../lute_release.zip, once tagged (regen manifest)",
    "dev:class": "Show public interface methods of class",
    "todo:list": "Show code todos",
    "todo:types": "Show types of todos",
    "db:create:demo": "Create the demo data loaded for new users",
    "db:migrate:test": "Run db migrations on db in .env.test / .env.test.local",
    "db:migrate:prod": "Run db migrations on db in .env / .env.local",
    "db:newscript": "Make a new db migration script",
    "db:newrepeat": "Make a new repeatable db migration script (for triggers, etc)",
    "db:suggestions": "See the db changes symfony suggests.  Some are good, some are terrible",
    "dev:dumpserver": "Start the dump server",
    "dev:find": "search specific parts of code using grep",
    "dev:finddump": "search src for 'dump', shouldn't make it into prod",
    "dev:nukecache": "blow things away, b/c symfony likes to cache",
    "dev:psalm": "Run psalm and start crying",
    "dev:start": "Start dev server on port 9999",
    "dev:stop": "Stop dev server on port 9999 (nix/mac only)",
    "test": "Run tests",
    "test:accept": "Run only acceptance tests with visible browser",
    "test:nofail": "Run tests and stop on first fail/error",
    "test:group": "Run tests with a given '@group xxxx' annotation",
    "test:full": "Create the test db, check orm mappings, and run all tests",
    "dev:data:load": "Abuse the testing system to load the dev db with some data.",
    "dev:data:clear": "Abuse the testing system to wipe the dev db."
  },
  "conflict": {
    "symfony/symfony": "*"
  },
  "extra": {
    "symfony": {
      "allow-contrib": false,
      "require": "6.2.*"
    }
  }
}
